//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.2034
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace stCoCClient.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("stCoCClient.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        internal static System.Drawing.Bitmap attach {
            get {
                object obj = ResourceManager.GetObject("attach", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap bold {
            get {
                object obj = ResourceManager.GetObject("bold", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap color_blue {
            get {
                object obj = ResourceManager.GetObject("color_blue", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap color_custom {
            get {
                object obj = ResourceManager.GetObject("color_custom", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap color_cyan {
            get {
                object obj = ResourceManager.GetObject("color_cyan", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap color_green {
            get {
                object obj = ResourceManager.GetObject("color_green", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap color_magenta {
            get {
                object obj = ResourceManager.GetObject("color_magenta", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap color_red {
            get {
                object obj = ResourceManager.GetObject("color_red", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap color_yellow {
            get {
                object obj = ResourceManager.GetObject("color_yellow", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap copy {
            get {
                object obj = ResourceManager.GetObject("copy", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap cut {
            get {
                object obj = ResourceManager.GetObject("cut", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap emoji_amazed {
            get {
                object obj = ResourceManager.GetObject("emoji_amazed", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap emoji_anger {
            get {
                object obj = ResourceManager.GetObject("emoji_anger", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap emoji_blank {
            get {
                object obj = ResourceManager.GetObject("emoji_blank", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap emoji_blushing {
            get {
                object obj = ResourceManager.GetObject("emoji_blushing", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap emoji_consoling {
            get {
                object obj = ResourceManager.GetObject("emoji_consoling", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap emoji_cute {
            get {
                object obj = ResourceManager.GetObject("emoji_cute", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap emoji_glad {
            get {
                object obj = ResourceManager.GetObject("emoji_glad", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap emoji_happy {
            get {
                object obj = ResourceManager.GetObject("emoji_happy", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap emoji_helpful {
            get {
                object obj = ResourceManager.GetObject("emoji_helpful", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap emoji_helpless {
            get {
                object obj = ResourceManager.GetObject("emoji_helpless", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap emoji_hopeless {
            get {
                object obj = ResourceManager.GetObject("emoji_hopeless", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap emoji_nervous {
            get {
                object obj = ResourceManager.GetObject("emoji_nervous", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap emoji_rage {
            get {
                object obj = ResourceManager.GetObject("emoji_rage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap emoji_sad {
            get {
                object obj = ResourceManager.GetObject("emoji_sad", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap emoji_sadistic {
            get {
                object obj = ResourceManager.GetObject("emoji_sadistic", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap emoji_sadness {
            get {
                object obj = ResourceManager.GetObject("emoji_sadness", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap emoji_unbelievables {
            get {
                object obj = ResourceManager.GetObject("emoji_unbelievables", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap emoji_weirdout {
            get {
                object obj = ResourceManager.GetObject("emoji_weirdout", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap emoji_whining {
            get {
                object obj = ResourceManager.GetObject("emoji_whining", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap emoji_wink {
            get {
                object obj = ResourceManager.GetObject("emoji_wink", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bad Url: &apos;{0}&apos;.
        /// </summary>
        internal static string fmtChatBadUrl {
            get {
                return ResourceManager.GetString("fmtChatBadUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Server {0} Disconnected...
        /// </summary>
        internal static string fmtChatDisconnected {
            get {
                return ResourceManager.GetString("fmtChatDisconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Private message to: {0}.
        /// </summary>
        internal static string fmtChatPrivateNick {
            get {
                return ResourceManager.GetString("fmtChatPrivateNick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Selected Nick: {0}.
        /// </summary>
        internal static string fmtChatSelectedNick {
            get {
                return ResourceManager.GetString("fmtChatSelectedNick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на [color={0}]{1}[/color].
        /// </summary>
        internal static string fmtChatStyleColor {
            get {
                return ResourceManager.GetString("fmtChatStyleColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}[img]{1}[/img] .
        /// </summary>
        internal static string fmtChatStyleImage {
            get {
                return ResourceManager.GetString("fmtChatStyleImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на [{0}]{1}[/{0}].
        /// </summary>
        internal static string fmtChatStyleText {
            get {
                return ResourceManager.GetString("fmtChatStyleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}[url={1}]{2}[/url] .
        /// </summary>
        internal static string fmtChatStyleUrl {
            get {
                return ResourceManager.GetString("fmtChatStyleUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Check {0}: {1} {2}...
        /// </summary>
        internal static string fmtCheck {
            get {
                return ResourceManager.GetString("fmtCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на CoC server: {0} {1}...
        /// </summary>
        internal static string fmtCoCServer {
            get {
                return ResourceManager.GetString("fmtCoCServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;i class=&quot;emoji {0}&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/i&gt; .
        /// </summary>
        internal static string fmtEmojiHtml {
            get {
                return ResourceManager.GetString("fmtEmojiHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error {0}: {1}.
        /// </summary>
        internal static string fmtError {
            get {
                return ResourceManager.GetString("fmtError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Export path set: {0}.
        /// </summary>
        internal static string fmtExportPath {
            get {
                return ResourceManager.GetString("fmtExportPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Chat: {0} {1}.
        /// </summary>
        internal static string fmtIRCBallonTitle {
            get {
                return ResourceManager.GetString("fmtIRCBallonTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Update {0}, {1} events.
        /// </summary>
        internal static string fmtListViewGroup {
            get {
                return ResourceManager.GetString("fmtListViewGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Restart notify update {0}.
        /// </summary>
        internal static string fmtNotifyReStart {
            get {
                return ResourceManager.GetString("fmtNotifyReStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Start notify update {0}.
        /// </summary>
        internal static string fmtNotifyStart {
            get {
                return ResourceManager.GetString("fmtNotifyStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Process update: {0} new events, {1} [{2}].
        /// </summary>
        internal static string fmtProcessUpdate {
            get {
                return ResourceManager.GetString("fmtProcessUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Server found: {0}.
        /// </summary>
        internal static string fmtServerFound {
            get {
                return ResourceManager.GetString("fmtServerFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings error: {0}.
        /// </summary>
        internal static string fmtSettingsError {
            get {
                return ResourceManager.GetString("fmtSettingsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings {0} successfully!.
        /// </summary>
        internal static string fmtSettingsOk {
            get {
                return ResourceManager.GetString("fmtSettingsOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на version mismatch server and client: {0}.
        /// </summary>
        internal static string fmtSetupSerCliMismatch {
            get {
                return ResourceManager.GetString("fmtSetupSerCliMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} misspelled word.
        /// </summary>
        internal static string fmtSpellCount {
            get {
                return ResourceManager.GetString("fmtSpellCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} {1}.
        /// </summary>
        internal static string fmtText {
            get {
                return ResourceManager.GetString("fmtText", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap ic_cancel_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_cancel_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_cast_connected_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_cast_connected_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_cast_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_cast_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_chat_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_chat_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_chrome_reader_mode_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_chrome_reader_mode_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_comment_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_comment_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_compare_arrows_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_compare_arrows_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_computer_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_computer_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_contacts_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_contacts_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_create_new_folder_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_create_new_folder_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_delete_forever_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_delete_forever_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_error_outline_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_error_outline_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_feedback_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_feedback_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_home_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_home_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_import_contacts_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_import_contacts_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_invert_colors_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_invert_colors_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_language_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_language_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_lock_open_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_lock_open_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_lock_outline_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_lock_outline_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_loyalty_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_loyalty_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_perm_data_setting_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_perm_data_setting_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_perm_media_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_perm_media_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_power_settings_new_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_power_settings_new_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_refresh_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_refresh_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_restore_page_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_restore_page_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_settings_applications_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_settings_applications_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_spellcheck_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_spellcheck_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_touch_app_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_touch_app_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_translate_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_translate_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ic_verified_user_white_18dp {
            get {
                object obj = ResourceManager.GetObject("ic_verified_user_white_18dp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap image {
            get {
                object obj = ResourceManager.GetObject("image", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap InformerLoading {
            get {
                object obj = ResourceManager.GetObject("InformerLoading", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap InformerLoadingError {
            get {
                object obj = ResourceManager.GetObject("InformerLoadingError", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap insert {
            get {
                object obj = ResourceManager.GetObject("insert", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap italic {
            get {
                object obj = ResourceManager.GetObject("italic", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap paste {
            get {
                object obj = ResourceManager.GetObject("paste", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap reply {
            get {
                object obj = ResourceManager.GetObject("reply", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap select {
            get {
                object obj = ResourceManager.GetObject("select", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap strike {
            get {
                object obj = ResourceManager.GetObject("strike", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap style {
            get {
                object obj = ResourceManager.GetObject("style", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на cancelled.
        /// </summary>
        internal static string txtCancelled {
            get {
                return ResourceManager.GetString("txtCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на private message to &apos;{0}&apos; canceled.
        /// </summary>
        internal static string txtChatCancelPrivateMsg {
            get {
                return ResourceManager.GetString("txtChatCancelPrivateMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Nick name not selected.
        /// </summary>
        internal static string txtChatErrorNickEmpty {
            get {
                return ResourceManager.GetString("txtChatErrorNickEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на you can not write a private message to yourself.
        /// </summary>
        internal static string txtChatErrorNickEquals {
            get {
                return ResourceManager.GetString("txtChatErrorNickEquals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на you can not to kick yourself.
        /// </summary>
        internal static string txtChatErrorNickKick {
            get {
                return ResourceManager.GetString("txtChatErrorNickKick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на  &apos;{0}&apos; .
        /// </summary>
        internal static string txtChatInsert {
            get {
                return ResourceManager.GetString("txtChatInsert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Archive messages, you can look at: .
        /// </summary>
        internal static string txtChatIrcArchive {
            get {
                return ResourceManager.GetString("txtChatIrcArchive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Nick name not selected!.
        /// </summary>
        internal static string txtChatNotSelectNick {
            get {
                return ResourceManager.GetString("txtChatNotSelectNick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You -&amp;gt; {0}.
        /// </summary>
        internal static string txtChatPrivateHead {
            get {
                return ResourceManager.GetString("txtChatPrivateHead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reply to {0}, .
        /// </summary>
        internal static string txtChatReply {
            get {
                return ResourceManager.GetString("txtChatReply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Nick name is empty!.
        /// </summary>
        internal static string txtChatSelectNickEmpty {
            get {
                return ResourceManager.GetString("txtChatSelectNickEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Nick name more on one selected!.
        /// </summary>
        internal static string txtChatSelectNickMany {
            get {
                return ResourceManager.GetString("txtChatSelectNickMany", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на duplicate or spam message not allowed.
        /// </summary>
        internal static string txtChatSpamMsg {
            get {
                return ResourceManager.GetString("txtChatSpamMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на check failed.
        /// </summary>
        internal static string txtCheckFailed {
            get {
                return ResourceManager.GetString("txtCheckFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на CoC game Tag.
        /// </summary>
        internal static string txtCoCGameTag {
            get {
                return ResourceManager.GetString("txtCoCGameTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на completed.
        /// </summary>
        internal static string txtCompleted {
            get {
                return ResourceManager.GetString("txtCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на data.
        /// </summary>
        internal static string txtData {
            get {
                return ResourceManager.GetString("txtData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на incomplete.
        /// </summary>
        internal static string txtIncomplete {
            get {
                return ResourceManager.GetString("txtIncomplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на incorrect.
        /// </summary>
        internal static string txtIncorrect {
            get {
                return ResourceManager.GetString("txtIncorrect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на an incorrect server address.
        /// </summary>
        internal static string txtIncorrectServerAddr {
            get {
                return ResourceManager.GetString("txtIncorrectServerAddr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на an incorrect userId Tag.
        /// </summary>
        internal static string txtIncorrectUserIdTag {
            get {
                return ResourceManager.GetString("txtIncorrectUserIdTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Informer code copied.
        /// </summary>
        internal static string txtInformerCodeCopy {
            get {
                return ResourceManager.GetString("txtInformerCodeCopy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на IRC server allready connecting.. skip...
        /// </summary>
        internal static string txtIRCAllreadyConnected {
            get {
                return ResourceManager.GetString("txtIRCAllreadyConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connect.
        /// </summary>
        internal static string txtIRCConnectButton {
            get {
                return ResourceManager.GetString("txtIRCConnectButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на IRC client not connect to server, please wait.. or press Connect button..
        /// </summary>
        internal static string txtIRCConnectWait {
            get {
                return ResourceManager.GetString("txtIRCConnectWait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на DisConnect.
        /// </summary>
        internal static string txtIRCDisConnectButton {
            get {
                return ResourceManager.GetString("txtIRCDisConnectButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You from -&gt; .
        /// </summary>
        internal static string txtIRCForYouMessage {
            get {
                return ResourceManager.GetString("txtIRCForYouMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на IRC client not connect to server, please  press Connect button..
        /// </summary>
        internal static string txtIRCNoConnected {
            get {
                return ResourceManager.GetString("txtIRCNoConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на IRC Chat setup is not completted...
        /// </summary>
        internal static string txtIRCSetupErrorComplette {
            get {
                return ResourceManager.GetString("txtIRCSetupErrorComplette", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на IRC port setup is not valid...
        /// </summary>
        internal static string txtIRCSetupErrorPort {
            get {
                return ResourceManager.GetString("txtIRCSetupErrorPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на is empty.
        /// </summary>
        internal static string txtIsEmpty {
            get {
                return ResourceManager.GetString("txtIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Insert name &apos;{0}&apos;.
        /// </summary>
        internal static string txtMenuNickInsert {
            get {
                return ResourceManager.GetString("txtMenuNickInsert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Kick &apos;{0}&apos; from chanell.
        /// </summary>
        internal static string txtMenuNickKick {
            get {
                return ResourceManager.GetString("txtMenuNickKick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Private message to &apos;{0}&apos;.
        /// </summary>
        internal static string txtMenuNickPrivate {
            get {
                return ResourceManager.GetString("txtMenuNickPrivate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reply &apos;{0}&apos;.
        /// </summary>
        internal static string txtMenuNickReply {
            get {
                return ResourceManager.GetString("txtMenuNickReply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на not correct.
        /// </summary>
        internal static string txtNotCorrect {
            get {
                return ResourceManager.GetString("txtNotCorrect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на CoC Server change from settings! stop notify update...
        /// </summary>
        internal static string txtNotifyChangeSettings {
            get {
                return ResourceManager.GetString("txtNotifyChangeSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Selected notify copied...
        /// </summary>
        internal static string txtNotifyCopy {
            get {
                return ResourceManager.GetString("txtNotifyCopy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Not export, Data is empty!.
        /// </summary>
        internal static string txtNotifyExportEmpty {
            get {
                return ResourceManager.GetString("txtNotifyExportEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на CoC Server not defined in settings! not notify update...
        /// </summary>
        internal static string txtNotifyIncomplette {
            get {
                return ResourceManager.GetString("txtNotifyIncomplette", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No items selected from notify! not copied...
        /// </summary>
        internal static string txtNotifyNoCopy {
            get {
                return ResourceManager.GetString("txtNotifyNoCopy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на error running the process. The thread aborted.
        /// </summary>
        internal static string txtProcessAbort {
            get {
                return ResourceManager.GetString("txtProcessAbort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на reloading.
        /// </summary>
        internal static string txtReloading {
            get {
                return ResourceManager.GetString("txtReloading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на request.
        /// </summary>
        internal static string txtRequest {
            get {
                return ResourceManager.GetString("txtRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на save.
        /// </summary>
        internal static string txtSave {
            get {
                return ResourceManager.GetString("txtSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на setup.
        /// </summary>
        internal static string txtSetup {
            get {
                return ResourceManager.GetString("txtSetup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на setup data.
        /// </summary>
        internal static string txtSetupData {
            get {
                return ResourceManager.GetString("txtSetupData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на -- Add: &apos;.
        /// </summary>
        internal static string txtSpellMwnuAddDictionary {
            get {
                return ResourceManager.GetString("txtSpellMwnuAddDictionary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на -- Cancel --.
        /// </summary>
        internal static string txtSpellMwnuCancel {
            get {
                return ResourceManager.GetString("txtSpellMwnuCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на -- Cancel misspeling --.
        /// </summary>
        internal static string txtSpellMwnuCancelMiss {
            get {
                return ResourceManager.GetString("txtSpellMwnuCancelMiss", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на -- Close --.
        /// </summary>
        internal static string txtSpellMwnuClose {
            get {
                return ResourceManager.GetString("txtSpellMwnuClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на -- No misspeling --.
        /// </summary>
        internal static string txtSpellMwnuNoMiss {
            get {
                return ResourceManager.GetString("txtSpellMwnuNoMiss", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на -- select replace --.
        /// </summary>
        internal static string txtSpellMwnuReplace {
            get {
                return ResourceManager.GetString("txtSpellMwnuReplace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на -- Restore string --.
        /// </summary>
        internal static string txtSpellMwnuRestore {
            get {
                return ResourceManager.GetString("txtSpellMwnuRestore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ___________________.
        /// </summary>
        internal static string txtSpellMwnuUnderline {
            get {
                return ResourceManager.GetString("txtSpellMwnuUnderline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Misspeling  end.
        /// </summary>
        internal static string txtSpellStatusEndMiss {
            get {
                return ResourceManager.GetString("txtSpellStatusEndMiss", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bad words: .
        /// </summary>
        internal static string txtStatusBadWord {
            get {
                return ResourceManager.GetString("txtStatusBadWord", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap underline {
            get {
                object obj = ResourceManager.GetObject("underline", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;/&gt;
        ///&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;/&gt;
        ///&lt;style&gt;
        ///
        ///body {
        ///    background:#2D2F31;
        ///}
        ///a, a:visited {
        ///    color: #DEB887;
        ///}
        ///a:hover {
        ///    color: #FFFFFF;
        ///    text-decoration: none;
        ///}
        ///.speech {
        ///    position: relative;
        ///    width: 80%;
        ///    height: auto;
        ///    text-align: left;
        ///    line-height: 15px;
        ///    padding: 5px 0px 8px 15px;
        ///    margin: 5px 0px 5px 0px;
        ///    color: #fff;
        ///     [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string webChatTemplate {
            get {
                return ResourceManager.GetString("webChatTemplate", resourceCulture);
            }
        }
    }
}
