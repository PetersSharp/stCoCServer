//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.2034
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace stDokuWiki.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ResourceWikiEngine {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ResourceWikiEngine() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("stDokuWiki.Properties.ResourceWikiEngine", typeof(ResourceWikiEngine).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Attic Id not set -&gt; {0}.
        /// </summary>
        internal static string fmtErrorAtticIdEmpty {
            get {
                return ResourceManager.GetString("fmtErrorAtticIdEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Auth error -&gt; file {0} not change.
        /// </summary>
        internal static string fmtErrorAuthEmpty {
            get {
                return ResourceManager.GetString("fmtErrorAuthEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} empty, request: {1}.
        /// </summary>
        internal static string fmtErrorGetResource {
            get {
                return ResourceManager.GetString("fmtErrorGetResource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Map Exception -&gt; {0}: {1} ({2}).
        /// </summary>
        internal static string fmtErrorMapTree {
            get {
                return ResourceManager.GetString("fmtErrorMapTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} -&gt; {1}: not valid name space: {2}.
        /// </summary>
        internal static string fmtErrorMapTreeNameSpace {
            get {
                return ResourceManager.GetString("fmtErrorMapTreeNameSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} -&gt; {1}: type set is read, not support for this version, name space: {2}.
        /// </summary>
        internal static string fmtErrorMapTreePut {
            get {
                return ResourceManager.GetString("fmtErrorMapTreePut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Meta data is empty -&gt; file {0} not change.
        /// </summary>
        internal static string fmtErrorMetaEmpty {
            get {
                return ResourceManager.GetString("fmtErrorMetaEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Not update {0} -&gt; incorrect name space: {1}.
        /// </summary>
        internal static string fmtErrorNSError {
            get {
                return ResourceManager.GetString("fmtErrorNSError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Not set file lock -&gt; {0}{1}.
        /// </summary>
        internal static string fmtErrorSetLock {
            get {
                return ResourceManager.GetString("fmtErrorSetLock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} -&gt; Task abnormally end, Namespace: {1}, search: {2}.
        /// </summary>
        internal static string fmtErrorTaskEnd {
            get {
                return ResourceManager.GetString("fmtErrorTaskEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} -&gt; Wiki parse data return empty...
        /// </summary>
        internal static string fmtErrorWikiFileParse {
            get {
                return ResourceManager.GetString("fmtErrorWikiFileParse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}.{1}.{2}.{3}.
        /// </summary>
        internal static string fmtFailAtticFormat {
            get {
                return ResourceManager.GetString("fmtFailAtticFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}.{1}.
        /// </summary>
        internal static string fmtFailMeta2Format {
            get {
                return ResourceManager.GetString("fmtFailMeta2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}.{1}.{2}.
        /// </summary>
        internal static string fmtFailMeta3Format {
            get {
                return ResourceManager.GetString("fmtFailMeta3Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на - [[/{0}/get/{1}/{2}{3}|{4}]] - {5}{6}.
        /// </summary>
        internal static string ListFormatAttic {
            get {
                return ResourceManager.GetString("ListFormatAttic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на [[/{0}/get/{1}/{2}{3}|{4}]] .
        /// </summary>
        internal static string ListFormatAtticDate {
            get {
                return ResourceManager.GetString("ListFormatAtticDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на - [[/{0}/get/{1}/{2}{3}|{4} ({5})]] - {6}{7}.
        /// </summary>
        internal static string ListFormatMedia {
            get {
                return ResourceManager.GetString("ListFormatMedia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на - [[{0}]]({0}) {1} ({2} bytes) &quot;{3}&quot;, {4}{5}.
        /// </summary>
        internal static string ListFormatMetaChanges {
            get {
                return ResourceManager.GetString("ListFormatMetaChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на * ###### [[/{0}/list/{1}/{2}|{3}]]{4}.
        /// </summary>
        internal static string ListFormatNameSpace {
            get {
                return ResourceManager.GetString("ListFormatNameSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на - [[/{0}/get/{1}/{2}{3}|{3}]] - {4}{5}.
        /// </summary>
        internal static string ListFormatPage {
            get {
                return ResourceManager.GetString("ListFormatPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}{4} &gt; Search: &apos;{1}&apos;, Namespace: {2}, Total pages: {3}.
        /// </summary>
        internal static string ListFormatPageStatistic {
            get {
                return ResourceManager.GetString("ListFormatPageStatistic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на #### unsupported Wiki file Type.
        /// </summary>
        internal static string mdErrorGetList {
            get {
                return ResourceManager.GetString("mdErrorGetList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; Namespace: {0}, Resource: {1}, Type: {2}.
        /// </summary>
        internal static string mdErrorSearchEmpty {
            get {
                return ResourceManager.GetString("mdErrorSearchEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}#### Data empty{0}* * *{0}.
        /// </summary>
        internal static string PageToMdError1 {
            get {
                return ResourceManager.GetString("PageToMdError1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}#### Content empty, file {1}{2} ({3}){0}* * *{0}.
        /// </summary>
        internal static string PageToMdError2 {
            get {
                return ResourceManager.GetString("PageToMdError2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}#### Binary file {1}{2} ({3}){0}* * *{0}.
        /// </summary>
        internal static string PageToMdError3 {
            get {
                return ResourceManager.GetString("PageToMdError3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}#### name: {1}{2} ({3}){0}#### path: &quot;{4}&quot;{0}#### body: {0}* * *{0}{5}{0}* * *{0}.
        /// </summary>
        internal static string PageToMdError4 {
            get {
                return ResourceManager.GetString("PageToMdError4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {1}{0}{2}{0}{3}{0}{4}{0}{5}{0}&quot;{6}&quot;{0}{7}{8}.
        /// </summary>
        internal static string PutPageMeta {
            get {
                return ResourceManager.GetString("PutPageMeta", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}{1}{2}.{3}.
        /// </summary>
        internal static string SetMetaFormat {
            get {
                return ResourceManager.GetString("SetMetaFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на * * *\\ ###### {0}: {1}\\ * * *.
        /// </summary>
        internal static string ToMdException {
            get {
                return ResourceManager.GetString("ToMdException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Engine options DokuWikiToHtml Disabled!.
        /// </summary>
        internal static string txtDisableDokuWikiToHtml {
            get {
                return ResourceManager.GetString("txtDisableDokuWikiToHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Engine options HtmlToDokuWiki Disabled!.
        /// </summary>
        internal static string txtDisableHtmlToDokuWiki {
            get {
                return ResourceManager.GetString("txtDisableHtmlToDokuWiki", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на recent archive, resource not found.
        /// </summary>
        internal static string txtErrorAtticEmpty {
            get {
                return ResourceManager.GetString("txtErrorAtticEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File Content.
        /// </summary>
        internal static string txtErrorFileEmpty {
            get {
                return ResourceManager.GetString("txtErrorFileEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на string Builder instance.
        /// </summary>
        internal static string txtErrorhStringBuilderIsNull {
            get {
                return ResourceManager.GetString("txtErrorhStringBuilderIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на meta Data incorrect.
        /// </summary>
        internal static string txtErrorMetaData {
            get {
                return ResourceManager.GetString("txtErrorMetaData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на meta List.
        /// </summary>
        internal static string txtErrorMetaEmpty {
            get {
                return ResourceManager.GetString("txtErrorMetaEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на meta write path is empty.
        /// </summary>
        internal static string txtErrorMetaWritePath {
            get {
                return ResourceManager.GetString("txtErrorMetaWritePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Page/Resource Name.
        /// </summary>
        internal static string txtErrorSearchEmpty {
            get {
                return ResourceManager.GetString("txtErrorSearchEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на search pattern is empty...
        /// </summary>
        internal static string txtErrorSearchPaternEmpty {
            get {
                return ResourceManager.GetString("txtErrorSearchPaternEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wiki Content convert.
        /// </summary>
        internal static string txtErrorWikiContentConvert {
            get {
                return ResourceManager.GetString("txtErrorWikiContentConvert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wiki Content.
        /// </summary>
        internal static string txtErrorWikiContentEmpty {
            get {
                return ResourceManager.GetString("txtErrorWikiContentEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wiki Data.
        /// </summary>
        internal static string txtErrorWikiDataEmpty {
            get {
                return ResourceManager.GetString("txtErrorWikiDataEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wiki Home.
        /// </summary>
        internal static string txtHomePageTitle {
            get {
                return ResourceManager.GetString("txtHomePageTitle", resourceCulture);
            }
        }
    }
}
