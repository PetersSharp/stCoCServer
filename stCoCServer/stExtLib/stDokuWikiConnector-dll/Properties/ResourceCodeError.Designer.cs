//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.2034
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace stDokuWiki.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ResourceCodeError {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ResourceCodeError() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("stDokuWiki.Properties.ResourceCodeError", typeof(ResourceCodeError).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Page {0}: {1}.
        /// </summary>
        internal static string rpcCreateSummary {
            get {
                return ResourceManager.GetString("rpcCreateSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Page errors.
        /// </summary>
        internal static string rpcError100 {
            get {
                return ResourceManager.GetString("rpcError100", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Page access errors.
        /// </summary>
        internal static string rpcError110 {
            get {
                return ResourceManager.GetString("rpcError110", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User is not allowed to read the requested page.
        /// </summary>
        internal static string rpcError111 {
            get {
                return ResourceManager.GetString("rpcError111", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User is not allowed to edit the page.
        /// </summary>
        internal static string rpcError112 {
            get {
                return ResourceManager.GetString("rpcError112", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Manager permission is required.
        /// </summary>
        internal static string rpcError113 {
            get {
                return ResourceManager.GetString("rpcError113", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Superuser permission is required.
        /// </summary>
        internal static string rpcError114 {
            get {
                return ResourceManager.GetString("rpcError114", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Page existence errors.
        /// </summary>
        internal static string rpcError120 {
            get {
                return ResourceManager.GetString("rpcError120", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The requested page does not exist.
        /// </summary>
        internal static string rpcError121 {
            get {
                return ResourceManager.GetString("rpcError121", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Page edit errors.
        /// </summary>
        internal static string rpcError130 {
            get {
                return ResourceManager.GetString("rpcError130", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Empty page id.
        /// </summary>
        internal static string rpcError131 {
            get {
                return ResourceManager.GetString("rpcError131", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Empty page content.
        /// </summary>
        internal static string rpcError132 {
            get {
                return ResourceManager.GetString("rpcError132", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Page is locked.
        /// </summary>
        internal static string rpcError133 {
            get {
                return ResourceManager.GetString("rpcError133", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Positive wordblock check.
        /// </summary>
        internal static string rpcError134 {
            get {
                return ResourceManager.GetString("rpcError134", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Media access errors.
        /// </summary>
        internal static string rpcError210 {
            get {
                return ResourceManager.GetString("rpcError210", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User is not allowed to read the requested media.
        /// </summary>
        internal static string rpcError211 {
            get {
                return ResourceManager.GetString("rpcError211", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User is not allowed to delete media.
        /// </summary>
        internal static string rpcError212 {
            get {
                return ResourceManager.GetString("rpcError212", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User is not allowed to list media.
        /// </summary>
        internal static string rpcError215 {
            get {
                return ResourceManager.GetString("rpcError215", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Media existence errors.
        /// </summary>
        internal static string rpcError220 {
            get {
                return ResourceManager.GetString("rpcError220", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The requested media does not exist.
        /// </summary>
        internal static string rpcError221 {
            get {
                return ResourceManager.GetString("rpcError221", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Media edit errors.
        /// </summary>
        internal static string rpcError230 {
            get {
                return ResourceManager.GetString("rpcError230", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Filename not given.
        /// </summary>
        internal static string rpcError231 {
            get {
                return ResourceManager.GetString("rpcError231", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File is still referenced.
        /// </summary>
        internal static string rpcError232 {
            get {
                return ResourceManager.GetString("rpcError232", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Could not delete file.
        /// </summary>
        internal static string rpcError233 {
            get {
                return ResourceManager.GetString("rpcError233", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Search errors.
        /// </summary>
        internal static string rpcError300 {
            get {
                return ResourceManager.GetString("rpcError300", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Argument errors.
        /// </summary>
        internal static string rpcError310 {
            get {
                return ResourceManager.GetString("rpcError310", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The provided value is not a valid timestamp.
        /// </summary>
        internal static string rpcError311 {
            get {
                return ResourceManager.GetString("rpcError311", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Search result errors.
        /// </summary>
        internal static string rpcError320 {
            get {
                return ResourceManager.GetString("rpcError320", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No changes in specified timeframe.
        /// </summary>
        internal static string rpcError321 {
            get {
                return ResourceManager.GetString("rpcError321", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Not authorized to call method.
        /// </summary>
        internal static string rpcError401 {
            get {
                return ResourceManager.GetString("rpcError401", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Forbidden to call the method.
        /// </summary>
        internal static string rpcError403 {
            get {
                return ResourceManager.GetString("rpcError403", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid XML-RPC request. Not conforming to specification.
        /// </summary>
        internal static string rpcErrorExt32600 {
            get {
                return ResourceManager.GetString("rpcErrorExt32600", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Requested method does not exist.
        /// </summary>
        internal static string rpcErrorExt32601 {
            get {
                return ResourceManager.GetString("rpcErrorExt32601", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wrong number of parameters or invalid method parameters.
        /// </summary>
        internal static string rpcErrorExt32602 {
            get {
                return ResourceManager.GetString("rpcErrorExt32602", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Not authorized to call the requested method (No login or invalid login data was given).
        /// </summary>
        internal static string rpcErrorExt32603 {
            get {
                return ResourceManager.GetString("rpcErrorExt32603", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Forbidden to call the requested method (but a valid login was given).
        /// </summary>
        internal static string rpcErrorExt32604 {
            get {
                return ResourceManager.GetString("rpcErrorExt32604", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The XML-RPC API has not been enabled in the configuration.
        /// </summary>
        internal static string rpcErrorExt32605 {
            get {
                return ResourceManager.GetString("rpcErrorExt32605", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Parse Error, request not well formed.
        /// </summary>
        internal static string rpcErrorExt32700 {
            get {
                return ResourceManager.GetString("rpcErrorExt32700", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Recursive calls to system.multicall are forbidden.
        /// </summary>
        internal static string rpcErrorExt32800 {
            get {
                return ResourceManager.GetString("rpcErrorExt32800", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unknown server error.
        /// </summary>
        internal static string rpcErrorExt99999 {
            get {
                return ResourceManager.GetString("rpcErrorExt99999", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Data is empty.
        /// </summary>
        internal static string rpcErrorInt5000 {
            get {
                return ResourceManager.GetString("rpcErrorInt5000", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File not found.
        /// </summary>
        internal static string rpcErrorInt5031 {
            get {
                return ResourceManager.GetString("rpcErrorInt5031", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Data structure error, corrupt table.
        /// </summary>
        internal static string rpcErrorInt5094 {
            get {
                return ResourceManager.GetString("rpcErrorInt5094", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} {1} is empty...
        /// </summary>
        internal static string rpcErrorIntFormat {
            get {
                return ResourceManager.GetString("rpcErrorIntFormat", resourceCulture);
            }
        }
    }
}
