<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="fmtIniErrorLoad" xml:space="preserve">
    <value>Ini file Error Load: {0}</value>
  </data>
  <data name="fmtIniNotFound" xml:space="preserve">
    <value>Ini file Not Found: {0}</value>
  </data>
  <data name="fmtIRCAdmin" xml:space="preserve">
    <value>ChanServ FLAGS {0} {1}!*@{2} -V+oO</value>
  </data>
  <data name="fmtIRCBan" xml:space="preserve">
    <value>MODE {0} +b $r:{1}!*@{2}</value>
  </data>
  <data name="fmtIRCKick" xml:space="preserve">
    <value>KICK {0} {1}</value>
  </data>
  <data name="fmtIRCRegBot" xml:space="preserve">
    <value>NickServ REGISTER {0} {1}</value>
  </data>
  <data name="fmtIRCRegChannel" xml:space="preserve">
    <value>ChanServ REGISTER {0} "Clash of Clans {1}"</value>
  </data>
  <data name="fmtIRCSet2Channel" xml:space="preserve">
    <value>ChanServ SET {0} {1}</value>
  </data>
  <data name="fmtIRCSet3Channel" xml:space="preserve">
    <value>ChanServ SET {0} {1} {2}</value>
  </data>
  <data name="fmtIRCSet4Channel" xml:space="preserve">
    <value>ChanServ SET {0} {1} {2} {3}</value>
  </data>
  <data name="fmtIRCTopic" xml:space="preserve">
    <value>TOPIC {0} :"{1}"</value>
  </data>
  <data name="fmtOptionNotAction" xml:space="preserve">
    <value>not action found: {0}</value>
  </data>
  <data name="PrnError" xml:space="preserve">
    <value>ERROR</value>
  </data>
  <data name="PrnOk" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="txtOptionNotClanId" xml:space="preserve">
    <value>not Clan Id</value>
  </data>
  <data name="txtOptionNotClanName" xml:space="preserve">
    <value>not Clan Name</value>
  </data>
  <data name="txtOptionNotHomeUrl" xml:space="preserve">
    <value>not Home Url</value>
  </data>
  <data name="txtOptionNotIrcChannel" xml:space="preserve">
    <value>not IRC Channel</value>
  </data>
  <data name="txtOptionNotNickName" xml:space="preserve">
    <value>not user IRC nickname</value>
  </data>
  <data name="txtOptionNotRegEmail" xml:space="preserve">
    <value>not registred Email adress</value>
  </data>
  <data name="txtOptionNotIrcTopic" xml:space="preserve">
    <value>not Topic to IRC Channel</value>
  </data>
  <data name="banRun" xml:space="preserve">
    <value>Manage IRC channel utility for stCoCServer engine</value>
  </data>
  <data name="fmtIRCPassword" xml:space="preserve">
    <value>(stage{0}) - Type you Bot IRC password: </value>
  </data>
  <data name="txtBatchModeNotSupport" xml:space="preserve">
    <value>Batch mode Not support this operations</value>
  </data>
  <data name="txtHelpActionAdmin" xml:space="preserve">
    <value>Set user nickname to admin privilege</value>
  </data>
  <data name="txtHelpActionBan" xml:space="preserve">
    <value>Ban  user nickname</value>
  </data>
  <data name="txtHelpActionChannel" xml:space="preserve">
    <value>Set channel Message, Description and URL</value>
  </data>
  <data name="txtHelpActionKick" xml:space="preserve">
    <value>Kick user nickname</value>
  </data>
  <data name="txtHelpActionRegbot" xml:space="preserve">
    <value>Registration Bot nickname from IRC server</value>
  </data>
  <data name="txtHelpActionRegchan" xml:space="preserve">
    <value>Registration channel to Bot nickname</value>
  </data>
  <data name="txtHelpActionTopic" xml:space="preserve">
    <value>Set channel Topic</value>
  </data>
  <data name="txtHelpBatch" xml:space="preserve">
    <value>Batch mode, no interactive</value>
  </data>
  <data name="txtHelpChannel" xml:space="preserve">
    <value>IRC channel include '#'</value>
  </data>
  <data name="txtHelpClaname" xml:space="preserve">
    <value>Clan Name</value>
  </data>
  <data name="txtHelpClanid" xml:space="preserve">
    <value>Clan ID</value>
  </data>
  <data name="txtHelpEmail" xml:space="preserve">
    <value>Email for registration respond</value>
  </data>
  <data name="txtHelpShowConfig" xml:space="preserve">
    <value>Show configuration and exit</value>
  </data>
  <data name="txtHelpTopic" xml:space="preserve">
    <value>IRC channel Topic</value>
  </data>
  <data name="txtHelpUsrname" xml:space="preserve">
    <value>User nickname</value>
  </data>
  <data name="txtHelpWeb" xml:space="preserve">
    <value>Web home page (URL)</value>
  </data>
  <data name="txtOptionNotValidEmail" xml:space="preserve">
    <value>not valid Email adress</value>
  </data>
  <data name="txtOptionPasswordEmpty" xml:space="preserve">
    <value>Password phase is empty</value>
  </data>
  <data name="txtPasswordNotEquals" xml:space="preserve">
    <value>Stage 1/2: input password Not equals!</value>
  </data>
  <data name="fmtPasswordAddOrChange" xml:space="preserve">
    <value>Attention! Add or Edit line in configuration file stCoCServer.ini: {1}IRCPassword={0}{1}- and restart server!</value>
  </data>
  <data name="txtOptionNotBotName" xml:space="preserve">
    <value>not IRC Bot nickname</value>
  </data>
  <data name="txtHelpBotname" xml:space="preserve">
    <value>IRC Bot nickname</value>
  </data>
  <data name="txtHelpIpAllow" xml:space="preserve">
    <value>user/bot nickname IP allow for admin privilege</value>
  </data>
</root>