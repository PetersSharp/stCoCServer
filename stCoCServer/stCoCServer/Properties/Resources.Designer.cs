//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.2034
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace stCoCServer.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("stCoCServer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на [Plugin Clan Notify]: {0}.
        /// </summary>
        internal static string cmdClanNotifyError {
            get {
                return ResourceManager.GetString("cmdClanNotifyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на no command body set.
        /// </summary>
        internal static string cmdEmptyBody {
            get {
                return ResourceManager.GetString("cmdEmptyBody", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} error fetching website title: {1}.
        /// </summary>
        internal static string cmdFetchTitleError {
            get {
                return ResourceManager.GetString("cmdFetchTitleError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на empty IRC CoC command query.
        /// </summary>
        internal static string cmdIrcQueryEmpty {
            get {
                return ResourceManager.GetString("cmdIrcQueryEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на incomptible argument count to command.
        /// </summary>
        internal static string cmdMissingArgument {
            get {
                return ResourceManager.GetString("cmdMissingArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на statistic base temporary down...
        /// </summary>
        internal static string cmdNoSQL {
            get {
                return ResourceManager.GetString("cmdNoSQL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на [CMD Parser]: irc client not connected...
        /// </summary>
        internal static string cmdNotConnect {
            get {
                return ResourceManager.GetString("cmdNotConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на this Plugin Disabled from configuration.
        /// </summary>
        internal static string cmdPluginDisabled {
            get {
                return ResourceManager.GetString("cmdPluginDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на no iformation for you request.
        /// </summary>
        internal static string cmdQueryEmpty {
            get {
                return ResourceManager.GetString("cmdQueryEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на error return query request.
        /// </summary>
        internal static string cmdQueryError {
            get {
                return ResourceManager.GetString("cmdQueryError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на you request is wrong.
        /// </summary>
        internal static string cmdQueryWrong {
            get {
                return ResourceManager.GetString("cmdQueryWrong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} set topic to channel {1}: &quot;{2}&quot;.
        /// </summary>
        internal static string cmdSetTopicOk {
            get {
                return ResourceManager.GetString("cmdSetTopicOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} set user mode for channel {1}: &quot;{2}&quot;.
        /// </summary>
        internal static string cmdSetUserModeOk {
            get {
                return ResourceManager.GetString("cmdSetUserModeOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на URL &apos;{0}&apos; error: {1}.
        /// </summary>
        internal static string cmdUrlShortError {
            get {
                return ResourceManager.GetString("cmdUrlShortError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}, yor URL &apos;{1}&apos; is shorted: {2}.
        /// </summary>
        internal static string cmdUrlShortOK {
            get {
                return ResourceManager.GetString("cmdUrlShortOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на wrong authorize string, abort.
        /// </summary>
        internal static string cmdUserNotAllowed {
            get {
                return ResourceManager.GetString("cmdUserNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на system management command send only in private message!.
        /// </summary>
        internal static string cmdUserPrivateOnly {
            get {
                return ResourceManager.GetString("cmdUserPrivateOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Configuration empty or null.
        /// </summary>
        internal static string cnfEmpty {
            get {
                return ResourceManager.GetString("cnfEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на   | # |    Nik    |       Tag       |  Level  | Rank  |  Trophies  | League | Role | warriors+ | warriors - | Ratio | .
        /// </summary>
        internal static string fmtAnswerList {
            get {
                return ResourceManager.GetString("fmtAnswerList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на TOP {0} best warrior donation {1} in Clan members.
        /// </summary>
        internal static string fmtClanDonation {
            get {
                return ResourceManager.GetString("fmtClanDonation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на    use: @clan donation &lt;send|recive|ratio|total&gt; &lt;month&gt; &lt;year&gt;   .
        /// </summary>
        internal static string fmtClanDonationHelp {
            get {
                return ResourceManager.GetString("fmtClanDonationHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на    use: @clan &lt;info|war|warlast|warlog|stat|desc|list|donation|player&gt; &lt;month&gt; &lt;year&gt;   .
        /// </summary>
        internal static string fmtClanHelp {
            get {
                return ResourceManager.GetString("fmtClanHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на    use: @clan info - Clan generaly information   .
        /// </summary>
        internal static string fmtClanInfoHelp {
            get {
                return ResourceManager.GetString("fmtClanInfoHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на    use: @clan list &lt;month&gt; &lt;year&gt; - Clan member list   .
        /// </summary>
        internal static string fmtClanListHelp {
            get {
                return ResourceManager.GetString("fmtClanListHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на    use: @clan player &lt;id&gt; - Clan member information   .
        /// </summary>
        internal static string fmtClanPlayerHelp {
            get {
                return ResourceManager.GetString("fmtClanPlayerHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show {0} Clan Wars statistic.
        /// </summary>
        internal static string fmtClanWar {
            get {
                return ResourceManager.GetString("fmtClanWar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Configuration error: {0}.
        /// </summary>
        internal static string fmtConfErrorException {
            get {
                return ResourceManager.GetString("fmtConfErrorException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Configuration missing: {0}.
        /// </summary>
        internal static string fmtConfMissException {
            get {
                return ResourceManager.GetString("fmtConfMissException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0},  URL &apos;{1}&apos; is: {2}.
        /// </summary>
        internal static string fmtFetchTitle {
            get {
                return ResourceManager.GetString("fmtFetchTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на    error set language &apos;{0}&apos; to channel   .
        /// </summary>
        internal static string fmtLangSetupError {
            get {
                return ResourceManager.GetString("fmtLangSetupError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на    use: !lang &lt;password&gt; &lt;EN|RU|etc&gt; - Set language to channel   .
        /// </summary>
        internal static string fmtLangSetupHelp {
            get {
                return ResourceManager.GetString("fmtLangSetupHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на    set language &apos;{0}&apos; to channel: status {1}   .
        /// </summary>
        internal static string fmtLangSetupOk {
            get {
                return ResourceManager.GetString("fmtLangSetupOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на  Total members: {0}/50 .
        /// </summary>
        internal static string fmtMembersTotal {
            get {
                return ResourceManager.GetString("fmtMembersTotal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на    notifycation now is {0}   .
        /// </summary>
        internal static string fmtNotifySetupAction {
            get {
                return ResourceManager.GetString("fmtNotifySetupAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на    use: !notify &lt;password&gt; &lt;start|stop|period&gt; &lt;period seconds&gt; - Enable or Disable clan notifycation   .
        /// </summary>
        internal static string fmtNotifySetupHelp {
            get {
                return ResourceManager.GetString("fmtNotifySetupHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на    notifycation period now is {0} sec.   .
        /// </summary>
        internal static string fmtNotifySetupPeriod {
            get {
                return ResourceManager.GetString("fmtNotifySetupPeriod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Incorrect  URL, use: &lt;b&gt;/notify/sse/&lt;/b&gt;, &lt;b&gt;/notify/rss/&lt;/b&gt;, &lt;b&gt;/notify/json/&lt;/b&gt;.
        /// </summary>
        internal static string fmtNotifyUrlError {
            get {
                return ResourceManager.GetString("fmtNotifyUrlError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на    use: !&lt;command&gt; &lt;password&gt; &lt;value&gt; - Set system command, valid: mode, topic   .
        /// </summary>
        internal static string fmtSetCommandHelp {
            get {
                return ResourceManager.GetString("fmtSetCommandHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}{1} speak: {2}.
        /// </summary>
        internal static string fmtSpeak {
            get {
                return ResourceManager.GetString("fmtSpeak", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на    use: @say &lt;message&gt; - Send message from bot   .
        /// </summary>
        internal static string fmtSpeakHelp {
            get {
                return ResourceManager.GetString("fmtSpeakHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}{1} Time: {2}.
        /// </summary>
        internal static string fmtTime {
            get {
                return ResourceManager.GetString("fmtTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на    use: @time - show current time   .
        /// </summary>
        internal static string fmtTimeHelp {
            get {
                return ResourceManager.GetString("fmtTimeHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}{1} UpTime: {2}.
        /// </summary>
        internal static string fmtUpTime {
            get {
                return ResourceManager.GetString("fmtUpTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на    use: @uptime - show bot uptime   .
        /// </summary>
        internal static string fmtUpTimeHelp {
            get {
                return ResourceManager.GetString("fmtUpTimeHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на    use: @short &lt;url&gt; &lt;rlu|tinyurl&gt; - Shorter URL string   .
        /// </summary>
        internal static string fmtUrlShortHelp {
            get {
                return ResourceManager.GetString("fmtUrlShortHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на    use: @clan warlast - Clan 3 last Wars information   .
        /// </summary>
        internal static string fmtWarLastHelp {
            get {
                return ResourceManager.GetString("fmtWarLastHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на    use: @clan warlog - Clan all Wars information   .
        /// </summary>
        internal static string fmtWarLogHelp {
            get {
                return ResourceManager.GetString("fmtWarLogHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на IP GEO Filter disabled in configuration.
        /// </summary>
        internal static string GeoFilterDisabled {
            get {
                return ResourceManager.GetString("GeoFilterDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на IRC archive logging for: {0}-{1}-{2}.
        /// </summary>
        internal static string httpDateLogTitle {
            get {
                return ResourceManager.GetString("httpDateLogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;html&gt;
        ///&lt;head&gt;
        ///	&lt;meta charset=&quot;utf-8&quot; /&gt;
        ///	&lt;meta content=&quot;IE=EmulateIE7&quot; http-equiv=&quot;X-UA-Compatible&quot;/&gt;
        ///	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt;
        ///	&lt;meta name=&quot;generator&quot; content=&quot;{0}&quot;/&gt;
        ///	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot; /&gt;
        ///	&lt;meta name=&quot;robots&quot; content=&quot;noindex,nofollow&quot;/&gt;
        ///	&lt;title&gt;{1} - {2}&lt;/title&gt;
        ///	&lt;link rel=&quot;shortcut icon&quot; type=&quot;image/x-icon&quot; href=&quot;/assets/images/favicon.ico&quot; /&gt;
        ///	&lt;link rel=&quot;icon&quot; type=&quot;image/x-icon&quot; href=&quot;/assets/images/favicon.ico&quot; /&gt;
        ///	&lt;link [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string httpHtmlError {
            get {
                return ResourceManager.GetString("httpHtmlError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на IRC Log not found for date {0}-{1}-{2}.
        /// </summary>
        internal static string httpLogNotFound {
            get {
                return ResourceManager.GetString("httpLogNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на method not support.
        /// </summary>
        internal static string httpMethodNotSupport {
            get {
                return ResourceManager.GetString("httpMethodNotSupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на HTTP server disabled in configuration.
        /// </summary>
        internal static string httpServerDisabled {
            get {
                return ResourceManager.GetString("httpServerDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на IRC Bot disabled in configuration.
        /// </summary>
        internal static string ircBootDisabled {
            get {
                return ResourceManager.GetString("ircBootDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;p class=&quot;highlight chanmsg&quot;&gt;&lt;span class=&quot;text-primary irctime&quot;&gt;{0}&lt;/span&gt;&lt;span class=&quot;text-warning ircfrom&quot;&gt;{1}:&lt;/span&gt;&lt;span class=&quot;text-muted ircmsg&quot;&gt;{2}&lt;/span&gt;&lt;/p&gt;.
        /// </summary>
        internal static string ircChannelMessage {
            get {
                return ResourceManager.GetString("ircChannelMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на IRC channel &apos;{0}&apos; Log Archive.
        /// </summary>
        internal static string ircLogArchive {
            get {
                return ResourceManager.GetString("ircLogArchive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;p class=&quot;highlight notemsg&quot;&gt;&lt;span class=&quot;text-primary irctime&quot;&gt;{0}&lt;/span&gt;&lt;span class=&quot;text-warning ircfrom&quot;&gt;{1}:&lt;/span&gt;&lt;span class=&quot;text-danger ircmsg&quot;&gt;{2}&lt;/span&gt;&lt;/p&gt;.
        /// </summary>
        internal static string ircNoticeMessage {
            get {
                return ResourceManager.GetString("ircNoticeMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;p class=&quot;highlight privmsg&quot;&gt;&lt;span class=&quot;text-primary irctime&quot;&gt;{0}&lt;/span&gt;&lt;span class=&quot;text-warning ircfrom&quot;&gt;{1}:&lt;/span&gt;&lt;span class=&quot;text-muted ircmsg&quot;&gt;{2}&lt;/span&gt;&lt;/p&gt;.
        /// </summary>
        internal static string ircPrivateMessage {
            get {
                return ResourceManager.GetString("ircPrivateMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;p class=&quot;highlight servermsg&quot;&gt;&lt;span class=&quot;text-primary irctime&quot;&gt;{0}&lt;/span&gt;&lt;span class=&quot;text-info ircval&quot;&gt;{1}&lt;/span&gt;&lt;/p&gt;.
        /// </summary>
        internal static string ircServerMessage {
            get {
                return ResourceManager.GetString("ircServerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;p class=&quot;highlight sysexchnik&quot;&gt;&lt;span class=&quot;text-primary irctime&quot;&gt;{0}&lt;/span&gt;&lt;span class=&quot;text-danger ircnik&quot;&gt;Change Nick:&lt;/span&gt;&lt;span class=&quot;text-danger ircval&quot;&gt;{1}&lt;/span&gt;-&amp;lt;&lt;span class=&quot;text-warning ircval&quot;&gt;{2}&lt;/span&gt;&lt;/p&gt;.
        /// </summary>
        internal static string ircUserChangeNick {
            get {
                return ResourceManager.GetString("ircUserChangeNick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;p class=&quot;highlight sysuserexit&quot;&gt;&lt;span class=&quot;text-primary irctime&quot;&gt;{0}&lt;/span&gt;&lt;span class=&quot;text-danger ircval&quot;&gt;{1} Exit..&lt;/span&gt;&lt;/p&gt;.
        /// </summary>
        internal static string ircUserExit {
            get {
                return ResourceManager.GetString("ircUserExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;p class=&quot;highlight sysuserjoined&quot;&gt;&lt;span class=&quot;text-primary irctime&quot;&gt;{0}&lt;/span&gt;&lt;span class=&quot;text-success ircval&quot;&gt;{1} Joined..&lt;/span&gt;&lt;/p&gt;.
        /// </summary>
        internal static string ircUserJoined {
            get {
                return ResourceManager.GetString("ircUserJoined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;p class=&quot;highlight sysuserexit&quot;&gt;&lt;span class=&quot;text-primary irctime&quot;&gt;{0}&lt;/span&gt;&lt;span class=&quot;text-danger ircval&quot;&gt;KICKED: {1} from user &apos;{2}&apos;{3}&lt;/span&gt;&lt;/p&gt;.
        /// </summary>
        internal static string ircUserKicked {
            get {
                return ResourceManager.GetString("ircUserKicked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connected: {0} / Channel: {1}.
        /// </summary>
        internal static string PrnConnected {
            get {
                return ResourceManager.GetString("PrnConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ERROR.
        /// </summary>
        internal static string PrnError {
            get {
                return ResourceManager.GetString("PrnError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Exited gracefully...
        /// </summary>
        internal static string PrnExit {
            get {
                return ResourceManager.GetString("PrnExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на IRC plugin URL Title enabled...
        /// </summary>
        internal static string PrnIrcPluginContextUrlTitleStart {
            get {
                return ResourceManager.GetString("PrnIrcPluginContextUrlTitleStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на IRC plugin Notify started.. respawn message time: {0}.
        /// </summary>
        internal static string PrnIrcPluginLoopClanNotifyStart {
            get {
                return ResourceManager.GetString("PrnIrcPluginLoopClanNotifyStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} wait job event.. [{1}].
        /// </summary>
        internal static string PrnJob {
            get {
                return ResourceManager.GetString("PrnJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using current language: {0}.
        /// </summary>
        internal static string prnLangCulture {
            get {
                return ResourceManager.GetString("prnLangCulture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на error set  language, &apos;{0}&apos;: {1}.
        /// </summary>
        internal static string prnLangCultureError {
            get {
                return ResourceManager.GetString("prnLangCultureError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на NO.
        /// </summary>
        internal static string prnNo {
            get {
                return ResourceManager.GetString("prnNo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на OK.
        /// </summary>
        internal static string PrnOK {
            get {
                return ResourceManager.GetString("PrnOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}  is running..  [{1}].
        /// </summary>
        internal static string PrnRun {
            get {
                return ResourceManager.GetString("PrnRun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на type @help for ask me...
        /// </summary>
        internal static string PrnRunIrcHelp {
            get {
                return ResourceManager.GetString("PrnRunIrcHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на YES.
        /// </summary>
        internal static string prnYes {
            get {
                return ResourceManager.GetString("prnYes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на service: CoC Update started...
        /// </summary>
        internal static string serviceCoCApiStarted {
            get {
                return ResourceManager.GetString("serviceCoCApiStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на service: IP GEO Filter started...
        /// </summary>
        internal static string serviceGeoStarted {
            get {
                return ResourceManager.GetString("serviceGeoStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на service: HTTP Server started...
        /// </summary>
        internal static string serviceHttpStarted {
            get {
                return ResourceManager.GetString("serviceHttpStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на service: IRC Bot started...
        /// </summary>
        internal static string serviceIrcBotStarted {
            get {
                return ResourceManager.GetString("serviceIrcBotStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на service: IRC Logging started...
        /// </summary>
        internal static string serviceIrcLogStarted {
            get {
                return ResourceManager.GetString("serviceIrcLogStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на service: SysLog send failed: {0}.
        /// </summary>
        internal static string serviceSysLogSendFailed {
            get {
                return ResourceManager.GetString("serviceSysLogSendFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на service: SysLog started...
        /// </summary>
        internal static string serviceSysLogStarted {
            get {
                return ResourceManager.GetString("serviceSysLogStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на service: SysLog start failed: {0}.
        /// </summary>
        internal static string serviceSysLogStartFailed {
            get {
                return ResourceManager.GetString("serviceSysLogStartFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на service: HTTP Template started...
        /// </summary>
        internal static string serviceTemplateStarted {
            get {
                return ResourceManager.GetString("serviceTemplateStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SysLog disabled in configuration.
        /// </summary>
        internal static string SysLogDisabled {
            get {
                return ResourceManager.GetString("SysLogDisabled", resourceCulture);
            }
        }
    }
}
